'use client';

import React, { useEffect, useState } from 'react';
import { useParams } from 'next/navigation';
import { supabase } from 'utils/supabaseClient';

export default function Page() {
  const { id } = useParams(); // –ü–æ–ª—É—á–∞–µ–º id –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞
  const [newsItem, setNewsItem] = useState<any>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (!id) return;

    const fetchNewsItem = async () => {
      const { data, error } = await supabase
        .from('news')
        .select('*')
        .eq('id', id)
        .single(); // –ü–æ–ª—É—á–∞–µ–º –æ–¥–Ω—É –∑–∞–ø–∏—Å—å

      if (error) {
        console.error(error);
        setNewsItem(null);
      } else {
        setNewsItem(data);
      }
      setLoading(false);
    };

    fetchNewsItem();
  }, [id]);

  if (loading) {
    return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  }

  if (!newsItem) {
    return <p>–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>;
  }

  return (
    <div style={{ padding: 20 }}>
      <h1>{newsItem.title}</h1>
      <div dangerouslySetInnerHTML={{ __html: newsItem.description }} />


      {newsItem.file && newsItem.file.match(/\.(jpeg|jpg|png|gif|webp)$/i) ? (
        <img
          src={`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/news-files/${newsItem.file}`}
          alt="preview"
          style={{ maxWidth: '100%', borderRadius: 8 }}
        />
      ) : newsItem.file && newsItem.file.match(/\.(mp4|webm|ogg)$/i) ? (
        <video controls style={{ maxWidth: '100%', borderRadius: 8 }}>
          <source
            src={`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/news-files/${newsItem.file}`}
            type={`video/${newsItem.file.split('.').pop()}`}
          />
          –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ.
        </video>
      ) : newsItem.file ? (
        <a
          href={`${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/news-files/${newsItem.file}`}
          target="_blank"
          rel="noopener noreferrer"
        >
          üìé –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
        </a>
      ) : null}
      <p>
        <i>{new Date(newsItem.created_at).toLocaleString()}</i>
      </p>
    </div>
  );
}